21.09.06_10회차 0607~0639~
======================================================================================================
*
======================================================================================================








######################################################################################################
개념정리_객체지향프로그래밍 

클래스 내부에 속성(멤버변수)과 기능(함수)

Marker rPen = new Marker();
c와다르게 자바는 rPen앞에 에스크립터를붙여서 포인트변수화 하지 않아도 자동으로
포인트변수화시킨뒤 주소를 저장하나보다.
그럼 배열과마찬가지로 객체를 스택에서 구현은불가능한가?

modifire: 접근제한자

#객체 이용
아래보면 blackPen을 포인터변수화안해도 자동 포인트변수화가된다.
왜냐면 스택에 어차피 클래스를 만들지 못하니 무조건 포인트변수화해놓은듯하다
그럼 마찬가지로 스택에 없으니 .을 찍는경우도 *없이 .만찍어도된다.
스택이 있으면 구분하기위해 스택에선 그냥 .만찍고 포인터변수인경우 차이를 구분하기위해 *.을 찍는데
어차피 모두다 포인터로 *을 찍을거면 찍지말자고 합의했나보다.
안찍어도 그건 포인터밖에 없으니까
즉 -> .*이 무의미해졌고 .하나가 모두 함축한다는 뜻이다.


//설계용 클래스(라이브러리 클래스)는 메인메서드를 작성하지 않는다.
public class Pen {
	//객체의 속성을 나타내는것을 필드(멤버변수)라고 부름
	String color;
	int price;
	
	//객체의 기능을 나타내는 것을 메서드(멤버함수)라고 부름
	void write() {
		System.out.println(color + "색 글을 씁니다.");
	}
	
	void info() {
		System.out.println("----------pen's Info------------");
		System.out.println("색상: "+color);
		System.out.println("가격: "+price);
		//배열은 동종모음구조라 지금처럼 여러 형태의 데이터를 저장불가능하며 기능함수를
		//묶을수없다.
		
		
	}

}

public class PenMain {
	public static void main(String[] args) {
		//Pen의 기능과 속성을 사용하려면 설계용 클래스를 로딩시켜 pen 객체를 생성해야함
		Pen blackPen = new Pen();
		blackPen.color = "검정";
		blackPen.price = 400;
		
		blackPen.write();
		blackPen.info();
		
		Pen redPen = new Pen();
		redPen.color = "빨강";
		redPen.price = 600;
		redPen.write();
		redPen.info();
		
		
		System.out.println(blackPen);
		System.out.println(redPen);
				
		
		Pen bluePen = new Pen();
		bluePen.color = "파랑";
		bluePen.price = 500;
		
		bluePen.write();
		bluePen.info();
		
	
	}

}



######################################################################################################








######################################################################################################
개념정리_변수

#매개변수에 디폴트값을 넣는다고해서 c처럼 디폴트매개변수가 되지 않는다. 그런건 지원안함


public class Variable {
	//필드(멤버변수) 선언.
	int a; //초기화하지 않으면 기본값으로 자동 초기화
	
	//메서드 선언
	void printNumber(int c) {
		//지역변수 b와 매개변수 c를 선언
		int b=0;
		
		System.out.println("멤버변수: "+a);
		System.out.println("지역변수: "+b); //멤버, 매개는 초기화안되어있어도
										//출력등 사용가능한데 지역변수는 반드시
								//초기화해야 출력가능하다. 멤버나 매개는 밖에서
								//들어올것을 알기때문이다.
								//멤버변수는 초기화하지 않아도 기본값으로 자동초기화된다
								//매개는 반드시 밖에서 들어온다
		System.out.println("매개변수: "+c);
		
	}
	
	public static void main(String[] args) {
		Variable  v = new Variable();
		v.printNumber(5);
	}
}
 

######################################################################################################

















######################################################################################################
개념정리_생성자






######################################################################################################










######################################################################################################
예제15)


######################################################################################################




답:







	