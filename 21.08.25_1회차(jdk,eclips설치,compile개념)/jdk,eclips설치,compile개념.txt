21.08.25_1회차
======================================================================================================
*reference변수,포인터,실행중메모리구조,동적할당(new,delete)
======================================================================================================




#######################################################################################################
개념정리_

1)java.sun.com
-java SE -> jdk 8버전다운(개인은 무료임)8버전이 가장 많이 쓰임
	-jdk(development kit) = jre + 개발을 위한 도구(컴파일러, 디버그 도구)
						-디버거를 하는데 유익한 도구
		-jre(java runtime environment) : jvm + 자바프로그램 실행에 필요한 라이브러리 파일등(입력시 스캐너 등)
			-jvm의 실행환경을 구현해준다
			-추측)jvm이 바이너리코드를 실행하는데 실행할때 그 코드에 입력 하는 코드가 있지만 
				컴퓨터는 그걸모르니 그걸 제어해서 해당 바이너리코드이면 입력기능이다라고 정의해놓은 라이브러리 
				jre가 필요함
		-jvm(java virtual machine) : os별로 존재, 바이너리코드를 읽고 검증하고 실행한다.

jdk(컴파일) -> jre(라이브러리 지원,문법이라해야하나?) -> jvm(바이너리코드 읽으며 필요한 라이브러리 파악해서 jre규정대로 코드 실행) 
jdk내부에 jre가 있고 jre 내부에 jvm이 있다.


#환경변수설정
-자유롭게 jdk에 있는(정확하게는 jre일듯? 명령어(라이브러리)쓰는거니가) java의 명령어들을(실행파일들을) 경로없이 사용하기위해 환경변수설정
-내pc->속성->고급시스템설정->시스템변수생성(JAVA_HOME, 
	값 : jdk설치된곳의 bin 경로로서 보통은 C:\Program Files\Java\jdk1.8.0_301\bin이다.)
	->시스템변수중 path로 환경변수 새로만들기 클릭 -> %JAVA_HOME%\bin

#cmd에서 실행원리 알아보기
-HelloJava.java 생성
	-내부내용
		public class HelloJava {
			public static void main(String[] args){
				System.out.println("i loev you!");
				System.out.println(3+9);
			}
		}


-명령어
1)javac HelloJava.java	: 현재 작업디렉터리의 HelloJava.java(자바소스코드를 저장하는 파일)를 컴파일러에 돌려서 컴파일하라는 명령
	-이걸하면 HelloJava.class가 생성된다. 이 class는 컴파일되고 난 바이너리 코드로 추정된다.
	-jdk의 컴파일역할

2)java HelloJava	: 위처럼 .class인 바이너리코드로 추정되는놈중에서 HelloJava라는 이름인녀석을 실행한다
	-jvm의 실행역할

3)해당 명령어 2개를 실행할수있게 제공해주는것 : jre역할 (추정임)



2)eclipse.org
jdk를 8버전했으니 eclipse도 phothon으로 해줘야 좋다고함
-처음엔 프로젝트만들때 new->other : java 검색 java project하여 project 생성하여야하고 src가 원시코드가 담기는 공간임.
-eclipse는 저장을 하면 컴파일이됨. 그러니 반드시 변경사항이 있으면 저장후 실행해야함


#######################################################################################################